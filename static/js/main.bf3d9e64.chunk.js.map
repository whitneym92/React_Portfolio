{"version":3,"sources":["components/landingpage.js","components/aboutme.js","components/contact.js","components/projects.js","components/resume.js","components/main.js","App.js","registerServiceWorker.js","index.js"],"names":["Landing","Component","About","Contact","Projects","Resume","Main","exact","path","component","LandingPage","AboutMe","App","className","title","scroll","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"mOAUeA,E,uKANP,OACI,6BAAK,4C,GAHKC,aCQPC,E,uKANP,OACI,6BAAK,6C,GAHGD,aCQLE,E,uKANP,OACI,6BAAK,4C,GAHKF,aCQPG,E,uKANP,OACI,6BAAK,6C,GAHMH,aCQRI,E,uKANP,OACI,6BAAK,2C,GAHIJ,aCkBNK,EAVF,kBACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWE,IAClC,kBAAC,IAAD,CAAOH,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWJ,M,QCsB1BO,E,uKA9BX,OACE,yBAAKC,UAAU,oBACjB,kBAAC,SAAD,KACI,kBAAC,SAAD,CAAQC,MAAM,QAAQC,QAAM,GACxB,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,YAGR,kBAAC,SAAD,CAAQF,MAAM,SACV,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAME,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,YAGR,kBAAC,UAAD,KACI,yBAAKH,UAAU,iBACf,kBAAC,EAAD,a,GAvBMZ,aCIZgB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,aC7DjEC,IAASC,OACT,kBAAC,IAAD,KACA,kBAAC,EAAD,OAEEC,SAASC,eAAe,SDOX,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,mBAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,mBAAN,sBAEN5B,EAwCX,SAAiCO,GAE/BwB,MAAMxB,GACHI,MAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BT,OAAOC,SAASoC,eAKpBjC,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEAzDAoB,CAAwBjC,GAHxBD,EAAgBC,OCtBxBkC,I","file":"static/js/main.bf3d9e64.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Landing extends Component {\n    render() {\n        return(\n            <div><h1>Landing</h1></div>\n        )\n    }\n}\n\nexport default Landing;","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return(\n            <div><h1>About Me</h1></div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\n\nclass Contact extends Component {\n    render() {\n        return(\n            <div><h1>Contact</h1></div>\n        )\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\n\nclass Projects extends Component {\n    render() {\n        return(\n            <div><h1>Projects</h1></div>\n        )\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\n\nclass Resume extends Component {\n    render() {\n        return(\n            <div><h1>Resume</h1></div>\n        )\n    }\n}\n\nexport default Resume;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport LandingPage from './landingpage';\nimport AboutMe from './aboutme';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\n\n\n\nconst Main = () => (\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/aboutme\" component={AboutMe} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/resume\" component={Resume} />\n    </Switch>\n)\n\nexport default Main;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Layout, Header, Navigation, Drawer, Content, Card, CardText, Button } from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  render () {\n    return (\n      <div className=\"demo-big-content\">\n    <Layout>\n        <Header title=\"Title\" scroll>\n            <Navigation>\n                <Link to=\"/aboutme\">About Me</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n                <Link to=\"/resume\">Resume</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Title\">\n            <Navigation>\n                <Link to=\"/aboutme\">About Me</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n                <Link to=\"/resume\">Resume</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n    )\n  }\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}